# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2
      - name: Generate build number
        id: buildnumber
        uses: einaregilsson/build-number@v3 
        with:
          token: ${{secrets.github_token}}  
      - id: get_version
        uses: battila7/get-version-action@v2
#       - name: Get version and version code
#         uses: xom9ikk/version-by-tag@v1
#         id: version_by_tag
#         with:
#           isUseGithubRunNumber: true
      - name: Print version
        run: |
          echo "version: ${{ steps.get_version.outputs.version }}"
      - name: Write version
        run: |
          [ -z "${{ steps.get_version.outputs.version }}" ] && git tag v1.0.0          
          echo "version: v1.0.0"          
          echo "Build number: ${{ steps.buildnumber.outputs.build_number }}"
          touch version
          [ -z "${{ steps.get_version.outputs.version }}" ] && echo "v1.0.0-${{ steps.buildnumber.outputs.build_number }}" > version || echo "${{ steps.get_version.outputs.version }}-${{ steps.buildnumber.outputs.build_number }}" > version
      - name: Commit files # transfer the new html files back into the repository
        run: |
          git config --local user.name "githubaction"
          git add ./version
          git commit -m "Update version"
      - name: Push changes # push the output folder to your repo
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          force: true
